function configRouter(n,e){e.otherwise("/"),n.state("manga",{url:"/manga",templateUrl:"admin-site/scripts/components/manga/MangaView.html",controller:"MangaController"})}var AdminApp=angular.module("AdminApp",["ui.router","datatables","ui.bootstrap","ui.select"]);AdminApp.config(configRouter),configRouter.$inject=["$stateProvider","$urlRouterProvider"];var Config=function(){return{apiDomain:"http://manga-backend.local/"}}();!function(){function n(n,e,a,t){function o(n,e){return this.send("GET",n,e)}function i(n,e){return this.send("POST",n,e)}function r(a,t,o){var i=e.defer(),r={method:a,url:t,timeout:i.promise,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(n){var e=[];for(var a in n)e.push(encodeURIComponent(a)+"="+encodeURIComponent(n[a]));return e.join("&")}};return"POST"==a.toUpperCase()?r.data=o:"GET"==a.toUpperCase()&&(r.params=o),n(r).then(function(n){var e=n.data;return 0==e.success&&"ER0001"==e.errorCode?void Authenticate.logout():i.resolve(n.data)}).catch(function(n){return i.reject(n)}),i.promise.abort=function(){i.resolve()},i.promise}var l={get:o,post:i,send:r};return l}angular.module("AdminApp").factory("Request",n),n.$inject=["$http","$q","$cookies","$window"]}(),function(){angular.module("AdminApp").filter("propsFilter",function(){return function(n,e){var a=[];if(angular.isArray(n)){var t=Object.keys(e);n.forEach(function(n){for(var o=!1,i=0;i<t.length;i++){var r=t[i],l=e[r].toLowerCase();if(n[r].toString().toLowerCase().indexOf(l)!==-1){o=!0;break}}o&&a.push(n)})}else a=n;return a}})}(),function(){function n(n,e,a,t,o){function i(n){o.initGrid(n)}function r(){var t=a.find(".manga-grid");p=e.open({templateUrl:"createMangaModal.html",scope:n,size:"lg",appendTo:t})}function l(){}function u(){p.dismiss()}function m(t){f=t;var o=a.find(".manga-grid");g=e.open({templateUrl:"editMangaModal.html",scope:n,appendTo:o})}function c(){console.log("update"+f)}function d(){g.dismiss()}function s(n){console.log("remove")}var p,g,f;n.persons=[],n.openEditManga=m,n.removeManga=s,n.updateManga=c,n.closeEditManga=d,n.openCreateManga=r,n.closeCreateManga=u,n.addManga=l,n.people=[{name:"Adam",email:"adam@email.com",age:12,country:"United States"},{name:"Amalie",email:"amalie@email.com",age:12,country:"Argentina"},{name:"Estefanía",email:"estefania@email.com",age:21,country:"Argentina"},{name:"Adrian",email:"adrian@email.com",age:21,country:"Ecuador"},{name:"Wladimir",email:"wladimir@email.com",age:30,country:"Ecuador"},{name:"Samantha",email:"samantha@email.com",age:30,country:"United States"},{name:"Nicole",email:"nicole@email.com",age:43,country:"Colombia"},{name:"Natasha",email:"natasha@email.com",age:54,country:"Ecuador"},{name:"Michael",email:"michael@email.com",age:15,country:"Colombia"},{name:"Nicolás",email:"nicolas@email.com",age:43,country:"Colombia"}],n.selectedAuthor=[n.people[5],n.people[4]],i(n)}angular.module("AdminApp").controller("MangaController",n),n.$inject=["$scope","$uibModal","$document","MangaService","MangaGrid"]}(),function(){function n(n,e,a,t,o){function i(n){n.dtOptions=a.newOptions().withOption("ajax",{url:u,type:"GET",data:function(n,e){n.offset=n.start,n.limit=n.length,n.search=n.search.value,n.column=n.order[0].column,n.order=n.order[0].dir}}).withDataProp("data").withOption("serverSide",!0).withPaginationType("simple_numbers").withOption("drawCallback",l.bind(null,n)),n.dtColumns=[t.newColumn("manga_name"),t.newColumn("slug"),t.newColumn("view_count"),t.newColumn("like_count"),t.newColumn("id")],n.dtColumnDefs=[o.newColumnDef(0),o.newColumnDef(1).notSortable(),o.newColumnDef(2).notSortable(),o.newColumnDef(3).notSortable(),o.newColumnDef(4).notSortable().withOption("width","20%").renderWith(function(n,e,a){return r(n)})]}function r(n){var e='<div class="action"><button type="button" class="btn btn-primary update" ng-click="openEditManga('+n+')">Edit</button> <button type="button" class="btn btn-danger remove"  ng-click="removeManga('+n+')">Remove</button></div>';return e}function l(e,a){var t=angular.element(".action");angular.forEach(t,function(a){var t=n(angular.element(a).html())(e);angular.element(a).html(t)})}var u=Config.apiDomain+"mangas",m={initGrid:i};return m}angular.module("AdminApp").factory("MangaGrid",n),n.$inject=["$compile","MangaService","DTOptionsBuilder","DTColumnBuilder","DTColumnDefBuilder"]}(),function(){function n(){function n(){console.log("get from sv")}var e={get:n};return e}angular.module("AdminApp").factory("MangaService",n),n.$inject=[]}();
//# sourceMappingURL=data:application/json;base64,
